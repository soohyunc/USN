/* -*-  Mode:C++; c-basic-offset:8; tab-width:8; indent-tabs-mode:t -*- */
/*
 * Copyright(c) 1991-1997 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Computer Systems
 *      Engineering Group at Lawrence Berkeley Laboratory.
 * 4. Neither the name of the University nor of the Laboratory may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

/* $Id$ */

#ifndef ns_sst_sink_h
#define ns_sst_sink_h

#include "agent.h"
#include "packet.h"
#include "flags.h"
#include "ip.h"
#include "tcp.h"
#include "timer-handler.h"
#include "random.h"

#include "sst.h"
#include "sha-1.h"
#include "aes.h"

class SstSinkAgent : public Agent {
public:
	// constructor - a new Sst agent
	SstSinkAgent();

	// process a function call from OTcl
	int command(int argc, const char* const* argv);

	// receive a packet
	virtual void recv(Packet*, Handler*);

	// send a packet
	virtual void output(int seqno);

	// main method for dealing with rtx timeout
	//void timeout(int tno);

protected:
	// current simulator time
	inline double now() { return Scheduler::instance().clock(); }

	void init_query();	// initialise the query (from reader to tag)

	// variables
	u_int16_t 	flag_;	// flag
	bool		isRID;	// has RID generated?
	bool		isRND_R;// has a reader got rR_ ?
	u_int16_t	rID_;	// reader ID
	u_int16_t	rT_;	// random number by tag
	u_int16_t	rR_;	// random number by reader
	int		pkt_size_;	// packet size
	int		seqno_;		// packet sequence number
	int		npacket_;	// number of packet sent
};
#endif /* ns_sst_sink_h */
