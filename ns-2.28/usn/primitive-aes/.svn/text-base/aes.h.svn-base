/* -*-  Mode:C++; c-basic-offset:8; tab-width:8; indent-tabs-mode:t -*- */
/*
 * Copyright(c) 1991-1997 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Computer Systems
 *      Engineering Group at Lawrence Berkeley Laboratory.
 * 4. Neither the name of the University nor of the Laboratory may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

/**
 * This code is mainly written by the following authors.
 * 	@author Vincent Rijmen <vincent.rijmen@esat.kuleuven.ac.be>
 * 	@author Antoon Bosselaers <antoon.bosselaers@esat.kuleuven.ac.be>
 * 	@author Paulo Barreto <paulo.barreto@terra.com.br>
 *
 * URL: <http://www.iaik.tu-graz.ac.at/research/krypto/AES/old/%7Erijmen/rijndael/>
 *
 * This code has been modified slightly in order this code to work under ns-2.28
 * by Soo-Hyun Choi <s.choi@cs.ucl.ac.uk>
 *
 * URL: http://www.cs.ucl.ac.uk/staff/S.Choi
 */

/* $Id$ */

#ifndef _ns_aes_h
#define _ns_aes_h

#define MAXKC   (256/32)
#define MAXKB   (256/8)
#define MAXNR   14

typedef unsigned char   uint_8;
typedef unsigned short  uint_16;
typedef unsigned int    uint_32;

int KeySetupEnc(uint_32 rk[/*4*(Nr + 1)*/], const uint_8 cipherKey[], int keyBits);
int KeySetupDec(uint_32 rk[/*4*(Nr + 1)*/], const uint_8 cipherKey[], int keyBits);
void Encrypt(const uint_32 rk[/*4*(Nr + 1)*/], int Nr, const uint_8 pt[16], uint_8 ct[16]);
void Decrypt(const uint_32 rk[/*4*(Nr + 1)*/], int Nr, const uint_8 ct[16], uint_8 pt[16]);

#ifdef INTERMEDIATE_VALUE_KAT
void EncryptRound(const uint_32 rk[/*4*(Nr + 1)*/], int Nr, uint_8 block[16], int rounds);
void DecryptRound(const uint_32 rk[/*4*(Nr + 1)*/], int Nr, uint_8 block[16], int rounds);
#endif /* INTERMEDIATE_VALUE_KAT */

#endif /* _ns_aes_h */
